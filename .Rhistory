data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_cv +
avp04_cv + avp48_cv + avp812_cv + alpha_cv,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
caret::confusionMatrix(data = concussion.predictions$alpha.pred, concussion.predictions$actual, positive = "1")
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_cv,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_cv,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_cv,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_cv,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_cv,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_cv,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_cv +
avp04_cv + avp48_cv + avp812_cv + alpha_cv,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
View(concussion.predictions)
rm(list = ls())
source("./R Script files/Helper functions.R")
source("./R Script files/Participant information.R")
require(tidyverse)
require(furniture)
mmse.data <- read.csv("./Data Files/MMSE.csv",
header = TRUE, sep = ",")
mmse.detrended.data <- read.csv("./Data Files/Detrended MMSE.csv",
header = TRUE, sep = ",")
dfa.data <- read.csv("./Data Files/DFA.csv",
header = TRUE, sep = ",")
avp.data <- read.csv("./Data Files/AvP.csv",
header = TRUE, sep = ",")
trial.summary <- read.csv("./Data Files/Trial Summary.csv",
header = TRUE, sep = ",")
bad.trials <- read.csv("./Data Files/Excluded Trials.csv",
header = TRUE, sep = ",")
valid.trials <- trial_inclusion(trial.summary, bad.trials)
rm(list = "bad.trials")
mmse.data.long <- mmse.data %>%
gather(scale, sampen, -id, -block, -trial) %>%
mutate_if(is.character, funs(editVars)) %>%
mutate_if(is.character, as.numeric)
detrended.mmse.long <- mmse.detrended.data %>%
gather(scale, sampen, -id, -block, -trial) %>%
mutate_if(is.character, funs(editVars)) %>%
mutate_if(is.character, as.numeric)
rm(list = c("mmse.data", "mmse.detrended.data"))
first.fifty <- participants %>%
semi_join(valid.trials) %>%
filter(sx.current != "Yes" | is.na(sx.current)) %>%
filter(hand != "Left") %>%
select(id, order) %>%
arrange(order) %>%
filter(row_number(order) <= 50)
first.fifty.valid <- semi_join(valid.trials, first.fifty)
mmse.data.long <- mmse.data.long %>%
semi_join(first.fifty.valid) %>%
left_join(participants) %>%
select(id, trial, scale, sampen, prior.concussion)
ggplot(data = mmse.data.long, aes(x = scale, y = sampen,
group = interaction(id, trial))) +
facet_wrap(~prior.concussion) +
geom_line()
detrended.mmse.long <- detrended.mmse.long %>%
semi_join(first.fifty.valid) %>%
left_join(participants) %>%
select(id, trial, scale, sampen, prior.concussion)
ggplot(data = detrended.mmse.long, aes(x = scale, y = sampen,
group = interaction(id, trial))) +
facet_wrap(~prior.concussion) +
geom_line()
raw.complexity <- mmse.data.long %>%
group_by(id, trial) %>%
summarise(complexity = sum(sampen)) %>%
mutate(type = "raw.complexity")
detrended.complexity <- detrended.mmse.long %>%
group_by(id, trial) %>%
summarise(complexity = sum(sampen)) %>%
mutate(type = "detrended.complexity")
complexity <- bind_rows(raw.complexity, detrended.complexity) %>%
spread(type, complexity)
rm(list = c("raw.complexity", "detrended.complexity"))
avp.data <- semi_join(avp.data, first.fifty.valid)
trial.summary <- semi_join(trial.summary, first.fifty.valid)
injury.time <- c("Uninjured", "Recent", "Remote")
participants <- semi_join(participants, first.fifty) %>%
select(id, block, order, gender, hand, gamer, prior.concussion,
LOC, amnesia, sx.current, age, height, weight, diagnosed.number,
suspected.number, concussion.number, total.loc, total.retrograde, total.anterograde,
diagnosed.recent, suspected.recent) %>%
group_by(id) %>%
mutate(tfi.min = age - max(diagnosed.recent, suspected.recent, na.rm = TRUE) - 1,
tfi.max = age - max(diagnosed.recent, suspected.recent, na.rm = TRUE),
tfi.min.nom = ifelse(tfi.min == Inf, "Uninjured",
ifelse(tfi.min > 0.5, "Remote", "Recent")),
tfi.max.nom = ifelse(tfi.max == Inf, "Uninjured",
ifelse(tfi.max > 0.5, "Remote", "Recent")))
View(participants)
trial.outcomes <- left_join(complexity, avp.data) %>%
left_join(trial.summary) %>%
select(-valid.newtons, -valid.volts, -rmse.N)
average.outcomes <- trial.outcomes %>%
group_by(id) %>%
summarise_each(funs(mean, cv, n()), rmse.V, raw.complexity, detrended.complexity,
avp04, avp48, avp812) %>%
ungroup() %>%
select(id:rmse.V_n) %>%
rename(trials = rmse.V_n) %>%
left_join(participants) %>%
select(id, order, block, trials, gender:tfi.max.nom, everything())
table1(participants,
height, weight, age, gender, hand, gamer, LOC, amnesia,
as.factor(diagnosed.number), as.factor(suspected.number), as.factor(concussion.number),
as.factor(total.loc), as.factor(total.retrograde), as.factor(total.anterograde),
splitby = ~prior.concussion,
test = TRUE,
output_type = "markdown")
require(gvlma)
average.outcomes <- rename(average.outcomes, total.concussions = concussion.number) %>%
mutate(age.c = age - mean(age))
rmse.lm <- lm(rmse.V_mean ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
rmse.step <- MASS::stepAIC(rmse.lm, trace = FALSE)
anova(rmse.step, rmse.lm)
summary(gvlma(rmse.step))
rmse.lm <- lm(log(rmse.V_mean) ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
rmse.step <- MASS::stepAIC(rmse.lm, trace = FALSE)
anova(rmse.step, rmse.lm)
summary(gvlma(rmse.step))
summary(gvlma(rmse.lm))
rmse.lm <- lm(rmse.V_mean ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
rmse.step <- MASS::stepAIC(rmse.lm, trace = FALSE)
rmse.cv.lm <- lm(rmse.V_cv ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
rmse.cv.step <- MASS::stepAIC(rmse.cv.lm, trace = FALSE)
anova(rmse.cv.step, rmse.cv.lm)
summary(gvlma(rmse.cv.lm))
rmse.cv.lm <- lm(log(rmse.V_cv) ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
rmse.cv.step <- MASS::stepAIC(rmse.cv.lm, trace = FALSE)
anova(rmse.cv.step, rmse.cv.lm)
summary(gvlma(rmse.cv.lm))
avp04.lm <- lm(avp04_mean ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
avp04.step <- MASS::stepAIC(avp04.lm, trace = FALSE)
anova(avp04.step, avp04.lm)
summary(gvlma(avp04.lm))
plot(gvlma(avp04.lm), onepage = FALSE)
avp04.lm <- lm(avp04_mean ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes[average.outcomes$id != 918,])
avp04.step <- MASS::stepAIC(avp04.lm, trace = FALSE)
anova(avp04.step, avp04.lm)
avp04.cv.lm <- lm(avp04_cv ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
avp04.cv.step <- MASS::stepAIC(avp04.cv.lm, trace = FALSE)
anova(avp04.cv.step, avp04.cv.lm)
summary(gvlma(avp04.cv.step))
summary(avp04.cv.step)
avp48.lm <- lm(avp48_mean ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
avp48.step <- MASS::stepAIC(avp48.lm, trace = FALSE)
anova(avp48.step, avp48.lm)
summary(gvlma(avp48.step))
summary(gvlma(avp48.lm))
plot(gvlma(avp48.lm), onepage = FALSE)
deletion.gvlma(gvlma(avp48.lm))
plot(avp48.lm)
avp48.lm <- lm(avp48_mean ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes[c(-17),])
avp48.step <- MASS::stepAIC(avp48.lm, trace = FALSE)
anova(avp48.step, avp48.lm)
summary(gvlma(avp48.step))
summary(avp48.step)
avp48.cv.lm <- lm(avp48_cv ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
avp48.cv.step <- MASS::stepAIC(avp48.cv.lm, trace = FALSE)
anova(avp48.cv.step, avp48.cv.lm)
summary(gvlma(avp48.cv.step))
plot(gvlma(avp48.cv.step), onepage = FALSE)
summary(avp48.cv.step)
avp812.lm <- lm(avp812_mean ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
avp812.step <- MASS::stepAIC(avp812.lm, trace = FALSE)
anova(avp812.step, avp812.lm)
summary(gvlma(avp812.step))
plot(gvlma(avp812.step), onepage = FALSE)
avp812.lm <- lm(log(avp812_mean) ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
avp812.step <- MASS::stepAIC(avp812.lm, trace = FALSE)
anova(avp812.step, avp812.lm)
summary(gvlma(avp812.step))
plot(gvlma(avp812.step), onepage = FALSE)
summary(avp812.step)
avp812.cv.lm <- lm(avp812_cv ~ (diagnosed.number + suspected.number +
LOC + amnesia)^2,
data = average.outcomes)
avp812.cv.step <- MASS::stepAIC(avp812.cv.lm, trace = FALSE)
anova(avp812.cv.step, avp812.cv.lm)
summary(gvlma(avp812.cv.step))
summary(avp812.cv.step)
raw.complexity <- mmse.data.long %>%
group_by(id, trial) %>%
summarise(complexity = sum(sampen)) %>%
mutate(type = "raw.complexity")
detrended.complexity <- detrended.mmse.long %>%
group_by(id, trial) %>%
summarise(complexity = sum(sampen)) %>%
mutate(type = "detrended.complexity")
complexity <- bind_rows(raw.complexity, detrended.complexity) %>%
spread(type, complexity)
participants <- semi_join(participants, valid.trials) %>%
select(id, block, order, gender, hand, gamer, prior.concussion,
LOC, amnesia, sx.current, age, height, weight, diagnosed.number,
suspected.number, concussion.number, diagnosed.recent, suspected.recent) %>%
filter(sx.current != "Yes" | is.na(sx.current)) %>%
filter(hand != "Left")
valid.participants <- select(participants, id)
trial.outcomes <- semi_join(complexity, valid.participants) %>%
left_join(dfa.data) %>%
left_join(avp.data) %>%
left_join(participants) %>%
select(id, trial, block, order, gender, hand, gamer, prior.concussion,
LOC, amnesia, sx.current, age, height, weight, diagnosed.number,
suspected.number, concussion.number, diagnosed.recent, suspected.recent,
raw.complexity, detrended.complexity, avp04, avp48, avp812, alpha)
average.outcomes <- trial.outcomes %>%
group_by(id, block, order, gender, hand, gamer, prior.concussion, LOC,
amnesia, sx.current, age, height, weight, diagnosed.number,
suspected.number, concussion.number) %>%
summarise_each(funs(mean, cv, n()), raw.complexity, detrended.complexity, avp04, avp48, avp812,
alpha) %>%
ungroup() %>%
select(id:raw.complexity_n) %>%
rename(trials = raw.complexity_n) %>%
mutate(dx.status = ifelse(diagnosed.number > 0 & suspected.number > 0, "Both",
ifelse(diagnosed.number > 0 & suspected.number == 0, "Dx Only",
ifelse(diagnosed.number == 0 & suspected.number > 0, "Susp Only", "Uninjured"))))
rm(list = ls())
source("./R Script files/Helper functions.R")
source("./R Script files/Participant information.R")
require(tidyverse)
require(furniture)
mmse.data <- read.csv("./Data Files/MMSE.csv",
header = TRUE, sep = ",")
mmse.detrended.data <- read.csv("./Data Files/Detrended MMSE.csv",
header = TRUE, sep = ",")
dfa.data <- read.csv("./Data Files/DFA.csv",
header = TRUE, sep = ",")
avp.data <- read.csv("./Data Files/AvP.csv",
header = TRUE, sep = ",")
trial.summary <- read.csv("./Data Files/Trial Summary.csv",
header = TRUE, sep = ",")
bad.trials <- read.csv("./Data Files/Excluded Trials.csv",
header = TRUE, sep = ",")
valid.trials <- trial_inclusion(trial.summary, bad.trials)
rm(list = c("bad.trials", "trial.summary"))
mmse.data.long <- mmse.data %>%
gather(scale, sampen, -id, -block, -trial) %>%
mutate_if(is.character, funs(editVars)) %>%
mutate_if(is.character, as.numeric)
detrended.mmse.long <- mmse.detrended.data %>%
gather(scale, sampen, -id, -block, -trial) %>%
mutate_if(is.character, funs(editVars)) %>%
mutate_if(is.character, as.numeric)
mmse.data.long <- mmse.data.long %>%
semi_join(valid.trials) %>%
left_join(participants) %>%
select(id, trial, scale, sampen, prior.concussion)
ggplot(data = mmse.data.long, aes(x = scale, y = sampen,
group = interaction(id, trial))) +
facet_wrap(~prior.concussion) +
geom_line()
detrended.mmse.long <- detrended.mmse.long %>%
semi_join(valid.trials) %>%
left_join(participants) %>%
select(id, trial, scale, sampen, prior.concussion)
ggplot(data = detrended.mmse.long, aes(x = scale, y = sampen,
group = interaction(id, trial))) +
facet_wrap(~prior.concussion) +
geom_line()
raw.complexity <- mmse.data.long %>%
group_by(id, trial) %>%
summarise(complexity = sum(sampen)) %>%
mutate(type = "raw.complexity")
detrended.complexity <- detrended.mmse.long %>%
group_by(id, trial) %>%
summarise(complexity = sum(sampen)) %>%
mutate(type = "detrended.complexity")
complexity <- bind_rows(raw.complexity, detrended.complexity) %>%
spread(type, complexity)
participants <- semi_join(participants, valid.trials) %>%
select(id, block, order, gender, hand, gamer, prior.concussion,
LOC, amnesia, sx.current, age, height, weight, diagnosed.number,
suspected.number, concussion.number, diagnosed.recent, suspected.recent) %>%
filter(sx.current != "Yes" | is.na(sx.current)) %>%
filter(hand != "Left")
valid.participants <- select(participants, id)
trial.outcomes <- semi_join(complexity, valid.participants) %>%
left_join(dfa.data) %>%
left_join(avp.data) %>%
left_join(participants) %>%
select(id, trial, block, order, gender, hand, gamer, prior.concussion,
LOC, amnesia, sx.current, age, height, weight, diagnosed.number,
suspected.number, concussion.number, diagnosed.recent, suspected.recent,
raw.complexity, detrended.complexity, avp04, avp48, avp812, alpha)
average.outcomes <- trial.outcomes %>%
group_by(id, block, order, gender, hand, gamer, prior.concussion, LOC,
amnesia, sx.current, age, height, weight, diagnosed.number,
suspected.number, concussion.number) %>%
summarise_each(funs(mean, cv, n()), raw.complexity, detrended.complexity, avp04, avp48, avp812,
alpha) %>%
ungroup() %>%
select(id:raw.complexity_n) %>%
rename(trials = raw.complexity_n) %>%
mutate(dx.status = ifelse(diagnosed.number > 0 & suspected.number > 0, "Both",
ifelse(diagnosed.number > 0 & suspected.number == 0, "Dx Only",
ifelse(diagnosed.number == 0 & suspected.number > 0, "Susp Only", "Uninjured"))))
table1(participants,
height, weight, age, gender, hand, gamer, LOC, amnesia,
as.factor(diagnosed.number), as.factor(suspected.number), as.factor(concussion.number),
splitby = ~prior.concussion,
test = TRUE,
output_type = "markdown")
require(modelr)
set.seed(2000000)
concussion.crossval <- select(average.outcomes, id, gender, prior.concussion, raw.complexity_mean:alpha_cv, dx.status) %>%
filter(dx.status != "Susp Only") %>%
crossv_kfold(10)
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_mean,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_mean,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_mean,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_mean,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_mean,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_mean,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_mean +
avp04_mean + avp48_mean + avp812_mean + alpha_mean,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
mutate_at(vars(ends_with("pred")), funs(as.factor))
View(concussion.predictions)
caret::confusionMatrix(data = concussion.predictions$alpha.pred, concussion.predictions$actual, positive = "1")
str(concussion.predictions)
set.seed(2000000)
concussion.crossval <- select(average.outcomes, id, gender, prior.concussion, raw.complexity_mean:alpha_cv) %>%
mutate(prior.concussion = ifelse(prior.concussion == "Yes", 1, 0)) %>%
crossv_kfold(10)
concussion.crossval <- select(average.outcomes, id, gender, prior.concussion, raw.complexity_mean:alpha_cv, dx.status) %>%
filter(dx.status != "Susp Only") %>%
mutate(prior.concussion = ifelse(prior.concussion == "Yes", 1, 0)) %>%
crossv_kfold(10)
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_mean,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_mean,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_mean,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_mean,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_mean,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_mean,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_mean +
avp04_mean + avp48_mean + avp812_mean + alpha_mean,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
mutate_at(vars(ends_with("pred")), funs(as.factor))
View(concussion.predictions)
caret::confusionMatrix(data = concussion.predictions$alpha.pred, concussion.predictions$actual, positive = "1")
caret::confusionMatrix(data = concussion.predictions$complete.pred, concussion.predictions$actual, positive = "1")
caret::confusionMatrix(data = concussion.predictions$dtcomplex.pred, concussion.predictions$actual, positive = "1")
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_cv,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_cv,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_cv,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_cv,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_cv,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_cv,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_cv +
avp04_cv + avp48_cv + avp812_cv + alpha_cv,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
caret::confusionMatrix(data = concussion.predictions$dtcomplex.pred, concussion.predictions$actual, positive = "1")
caret::confusionMatrix(data = concussion.predictions$complete.pred, concussion.predictions$actual, positive = "1")
caret::confusionMatrix(data = concussion.predictions$alpha.pred, concussion.predictions$actual, positive = "1")
