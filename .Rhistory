family = binomial(),
data = .)),
avp04.model = map(train, ~ glm(prior.concussion ~ avp04_mean,
family = binomial(),
data = .)),
avp48.model = map(train, ~ glm(prior.concussion ~ avp48_mean,
family = binomial(),
data = .)),
avp812.model = map(train, ~ glm(prior.concussion ~ avp812_mean,
family = binomial(),
data = .)),
dfa.model = map(train, ~ glm(prior.concussion ~ alpha_mean,
family = binomial(),
data = .))))
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(prior.concussion ~ raw.complexity_mean,
family = binomial(),
data = .)),
dtcomplex.model = map(train, ~ glm(prior.concussion ~ detrended.complexity_mean,
family = binomial(),
data = .)),
avp04.model = map(train, ~ glm(prior.concussion ~ avp04_mean,
family = binomial(),
data = .)),
avp48.model = map(train, ~ glm(prior.concussion ~ avp48_mean,
family = binomial(),
data = .)),
avp812.model = map(train, ~ glm(prior.concussion ~ avp812_mean,
family = binomial(),
data = .)),
dfa.model = map(train, ~ glm(prior.concussion ~ alpha_mean,
family = binomial(),
data = .)))
View(concussion.models)
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = round(map2(rcomplex.model, test, type = "response", predict) + 0.00001),
dtcomplex.pred = round(map2(dtcomplex.model, test, type = "response", predict) + 0.00001),
avp04.pred = round(map2(avp04.model, test, type = "response", predict) + 0.00001),
avp48.pred = round(map2(avp48.model, test, type = "response", predict) + 0.00001),
avp812.pred = round(map2(avp812.model, test, type = "response", predict) + 0.00001),
alpha.pred = round(map2(dfa.model, test, type = "response", predict) + 0.00001),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:alpha.pred)
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:alpha.pred)
source("./R Script files/Helper functions.R")
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:alpha.pred) %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
source("./R Script files/Helper functions.R")
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:alpha.pred) %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:alpha.pred)
View(concussion.predictions)
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:alpha.pred) %>%
unnest()
View(concussion.predictions)
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:alpha.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
View(concussion.predictions)
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(prior.concussion ~ raw.complexity_mean,
family = binomial(),
data = .)),
dtcomplex.model = map(train, ~ glm(prior.concussion ~ detrended.complexity_mean,
family = binomial(),
data = .)),
avp04.model = map(train, ~ glm(prior.concussion ~ avp04_mean,
family = binomial(),
data = .)),
avp48.model = map(train, ~ glm(prior.concussion ~ avp48_mean,
family = binomial(),
data = .)),
avp812.model = map(train, ~ glm(prior.concussion ~ avp812_mean,
family = binomial(),
data = .)),
dfa.model = map(train, ~ glm(prior.concussion ~ alpha_mean,
family = binomial(),
data = .)),
complete.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_mean + avp04_mean + avp48_mean +
avp812_mean + alpha_mean,
family = binomial(),
data = .)))
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_mean,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_mean,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_mean,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_mean,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_mean,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_mean,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_mean +
avp04_mean + avp48_mean + avp812_mean + alpha_mean,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
View(concussion.predictions)
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_cv,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_cv,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_cv,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_cv,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_cv,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_cv,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_cv +
avp04_cv + avp48_cv + avp812_cv + alpha_cv,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
View(average.outcomes)
set.seed(2000000)
concussion.crossval <- select(average.outcomes, id, gender, prior.concussion, raw.complexity_mean:alpha_cv) %>%
mutate(prior.concussion = ifelse(prior.concussion == "Yes", 1, 0)) %>%
crossv_kfold(10)
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_cv,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_cv,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_cv,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_cv,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_cv,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_cv,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_cv +
avp04_cv + avp48_cv + avp812_cv + alpha_cv,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
View(concussion.predictions)
set.seed(2000000)
concussion.crossval <- select(average.outcomes, id, gender, prior.concussion, raw.complexity_mean:alpha_cv, dx.status) %>%
mutate(prior.concussion = ifelse(prior.concussion == "Yes", 1, 0)) %>%
filter(dx.status != "Susp Only") %>%
crossv_kfold(10)
## Singular mean models
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_mean,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_mean,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_mean,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_mean,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_mean,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_mean,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_mean +
avp04_mean + avp48_mean + avp812_mean + alpha_mean,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
View(concussion.predictions)
source("./R Script files/Helper functions.R")
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
summarise_at(vars(acutal, ends_with("pred")), funs(predictive_ability))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
summarise_at(vars(actual, ends_with("pred")), funs(predictive_ability))
install.packages("caret")
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
summarise_at(vars(actual, ends_with("pred")), funs(predictive_ability))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
summarise_each(vars(actual, ends_with("pred")), funs(predictive_ability))
View(concussion.predictions)
confusionMatrix(concussion.predictions$actual, concussion.predictions$rcomplex.pred)
install.packages("e1071")
confusionMatrix(concussion.predictions$actual, concussion.predictions$rcomplex.pred)
?confusionMatrix
confusionMatrix(concussion.predictions$actual, concussion.predictions$rcomplex.pred,)
confusionMatrix(concussion.predictions$actual, concussion.predictions$rcomplex.pred, positive = "1")
confusionMatrix(concussion.predictions$actual, concussion.predictions$dtcomplex.pred, positive = "1")
concussion.crossval <- select(average.outcomes, id, gender, prior.concussion, raw.complexity_mean:alpha_cv, dx.status) %>%
filter(dx.status != "Susp Only") %>%
crossv_kfold(10)
## Singular mean models
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_mean,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_mean,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_mean,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_mean,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_mean,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_mean,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_mean +
avp04_mean + avp48_mean + avp812_mean + alpha_mean,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
summarise_each(vars(actual, ends_with("pred")), funs(predictive_ability))
confusionMatrix(concussion.predictions$actual, concussion.predictions$dtcomplex.pred, positive = "1")
concussion.crossval <- select(average.outcomes, id, gender, prior.concussion, raw.complexity_mean:alpha_cv, dx.status) %>%
filter(dx.status != "Susp Only") %>%
crossv_kfold(10)
concussion.models <- concussion.crossval %>%
mutate(train = map(train, as_tibble)) %>%
mutate(rcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ raw.complexity_mean,
family = binomial,
data = .)),
dtcomplex.model = map(train, ~ glm(as.factor(prior.concussion) ~ detrended.complexity_mean,
family = binomial,
data = .)),
avp04.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp04_mean,
family = binomial,
data = .)),
avp48.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp48_mean,
family = binomial,
data = .)),
avp812.model = map(train, ~ glm(as.factor(prior.concussion) ~ avp812_mean,
family = binomial,
data = .)),
dfa.model = map(train, ~ glm(as.factor(prior.concussion) ~ alpha_mean,
family = binomial,
data = .)),
complete.model = map(train, ~ glm(as.factor(as.factor(prior.concussion)) ~ detrended.complexity_mean +
avp04_mean + avp48_mean + avp812_mean + alpha_mean,
family = binomial,
data = .)))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred)
View(concussion.predictions)
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred))
confusionMatrix(concussion.predictions$actual, concussion.predictions$dtcomplex.pred)
View(concussion.predictions)
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
mutate_at(vars(ends_with("pred")), factor(levels = c("No", "Yes")))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
mutate_at(vars(ends_with("pred")), funs(as.factor(levels = c("No", "Yes"))))
concussion.predictions <- concussion.models %>%
mutate(rcomplex.pred = map2(rcomplex.model, test, type = "response", predict),
dtcomplex.pred = map2(dtcomplex.model, test, type = "response", predict),
avp04.pred = map2(avp04.model, test, type = "response", predict),
avp48.pred = map2(avp48.model, test, type = "response", predict),
avp812.pred = map2(avp812.model, test, type = "response", predict),
alpha.pred = map2(dfa.model, test, type = "response", predict),
complete.pred = map2(complete.model, test, type = "response", predict),
id = map(map(test, as.data.frame), "id", select),
actual = map(map(test, as.data.frame), "prior.concussion", select)) %>%
select(id, actual, rcomplex.pred:complete.pred) %>%
unnest() %>%
mutate_at(vars(ends_with("pred")), funs(round_pred)) %>%
mutate_at(vars(ends_with("pred")), funs(as.factor))
source("./R Script files/Helper functions.R")
source("./R Script files/Deidentification.R")
source("./R Script files/Trial Validation.R")
source("./R Script files/Deidentification.R")
source("./R Script files/Helper functions.R")
source("./R Script files/Deidentification.R")
