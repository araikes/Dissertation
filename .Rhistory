aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean,
color = LOC)) +
geom_jitter(width = 0.25, size = 2) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean,
color = gender)) +
geom_jitter(width = 0.25, size = 2) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
summary(avp812.alt2.step)
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean)) +
geom_jitter(width = 0.25, size = 2,color = gender) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean, group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color =)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean, group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean, group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
#scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean, group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
# scale_colour_manual(name = "Gender",
#                     values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
)
ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean, group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC)) +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power")
ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean, group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC), color = "black")
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = avp812_mean, group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC), color = "black") +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
ggplot(data = average.outcomes, aes(x = gender,
y = avp48_mean,
fill = gender)) +
geom_boxplot() +
xlab("Gender") +
ylab("4-8 Hertz Average Power")
ggplot(data = average.outcomes, aes(x = gender,
y = log(avp48_mean),
fill = gender)) +
geom_boxplot()
ggplot(data = average.outcomes, aes(x = gender,
y = exp(log(avp48_mean)),
fill = gender)) +
geom_boxplot()
library(gvlma)
summary(gvlma(avp48.alt2.step))
avp48.mean.plot <- ggplot(data = average.outcomes, aes(x = gender,
y = log(avp48_mean),
fill = gender)) +
geom_boxplot() +
xlab("Gender") +
ylab("4-8 Hertz Average Power") +
ylim(c(0,0.45)) +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp48.mean.plot
avp48.mean.plot <- ggplot(data = average.outcomes, aes(x = gender,
y = log(avp48_mean),
fill = gender)) +
geom_boxplot() +
xlab("Gender") +
ylab("4-8 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp48.mean.plot
avp48.mean.plot <- ggplot(data = average.outcomes, aes(x = gender,
y = log(avp48_mean),
fill = gender)) +
geom_boxplot() +
xlab("Gender") +
ylab("4-8 Hertz Average Power") +
scale_fill_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp48.mean.plot
avp48.mean.plot <- ggplot(data = average.outcomes, aes(x = gender,
y = log(avp48_mean),
fill = gender)) +
geom_boxplot() +
xlab("Gender") +
ylab("4-8 Hertz Average Power") +
scale_fill_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
guides(fill = element_blank()) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp48.mean.plot
avp48.mean.plot <- ggplot(data = average.outcomes, aes(x = gender,
y = log(avp48_mean),
fill = gender)) +
geom_boxplot() +
xlab("Gender") +
ylab("4-8 Hertz Average Power") +
scale_fill_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
guides(fill = FALSE) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp48.mean.plot
save_plot(paste(my_dir, "/AvP48.svg", sep = ""),
avp48.mean.plot,
base_width = 14,
base_height = 6)
my_dir <- "C:/Users/adamraikes/Dropbox/Manuscript Submissions/Dissertation/Chapter 3/Participant mean values/Images"
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = log(avp812_mean), group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC), color = "black") +
xlab("Total number of concussions concussions") +
ylab("8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
avp812.mean.plot <- ggplot(data = average.outcomes, aes(x = total.concussions,
y = log(avp812_mean), group = LOC)) +
geom_jitter(width = 0.25, size = 2, aes(color = gender)) +
stat_smooth(method = "lm", se = FALSE,
aes(linetype = LOC), color = "black") +
xlab("Total number of concussions concussions") +
ylab("Log-transformed\n8-12 Hertz Average Power") +
scale_colour_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
scale_linetype_manual(name = "LOC",
values = c(1,2),
labels = c("No LOC", "LOC")) +
guides(colour = guide_legend(override.aes = list(linetype = c(0,0),
shape = c(16,16),
size = 4)),
linetype = guide_legend(override.aes = list(linetype = c(1,2),
color = c("black", "black")))) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
avp812.mean.plot
save_plot(paste(my_dir, "/AvP812.svg", sep = ""),
avp812.mean.plot,
base_width = 14,
base_height = 6)
save_plot(paste(my_dir, "/AvP48.svg", sep = ""),
avp48.mean.plot,
base_width = 14,
base_height = 6)
summary(dt.mmse.alt2.step)
2141+530
1/5000
1/5000
my_dir <- "C:/Users/adamraikes/Dropbox/Manuscript Submissions/Dissertation/Chapter 3/Participant mean values/Images"
require(ggplot2)
require(cowplot)
require(extrafont)
my_dir <- "C:/Users/adamraikes/Dropbox/Manuscript Submissions/Dissertation/Chapter 3/Participant mean values/Images"
avp48.mean.plot <- ggplot(data = average.outcomes, aes(x = gender,
y = log(avp48_mean),
fill = gender)) +
geom_boxplot() +
xlab("Gender") +
ylab("Log-transformed\n4-8 Hertz Average Power") +
scale_fill_manual(name = "Gender",
values = c("#ca0020", "#0571b0")) +
guides(fill = FALSE) +
theme_classic() +
theme(
title = element_text(family ="Arial", size = 24),
axis.text = element_text(family ="Arial", size = 24),
legend.title = element_text(family = "Arial", size = 24),
legend.text = element_text(family ="Arial", size = 24),
legend.key.size = unit(0.5, "in"),
axis.line.x = element_line(colour = "black", linetype = "solid",
size = 1),
axis.line.y = element_line(colour = "black", linetype = "solid",
size = 1))
save_plot(paste(my_dir, "/AvP48.svg", sep = ""),
avp48.mean.plot,
base_width = 14,
base_height = 6)
