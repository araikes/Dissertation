mmse.data <- read.csv("./Data Files/MMSE_Vision.csv", header = TRUE, sep = ",")
View(mmse.data)
View(trial.summary)
mmse.detrended.data <- read.csv("./Data Files/Detrended_Vision.csv", header = TRUE, sep = ",") %>%
select(-X)
View(mmse.detrended.data)
mmse.data <- read.csv("./Data Files/MMSE_Vision.csv", header = TRUE, sep = ",") %>%
select(-X)
View(trial.summary)
gsub("[A-z]", "", mmse.data)
tmp <- gsub("[A-z]", "", mmse.data)
str(mmse.data)
editVars <- function(x) {
# This function changes subject and trial variables from strings to numeric.
require(dplyr)
gsub("[A-z]", "", mmse.data)
}
mutate_if(mmse.data, is.factor(), funs(editVars))
mutate_if(mmse.data, is.factor(.), funs(editVars))
mutate_if(mmse.data, is.factor, funs(editVars))
editVars <- function(x) {
# This function changes subject and trial variables from strings to numeric.
require(dplyr)
gsub("[A-z]", "", x)
}
mutate_if(mmse.data, is.factor, funs(editVars))
editVars <- function(x) {
# This function changes subject and trial variables from strings to numeric.
gsub("[A-z]", "", x)
}
str(trial.summary)
prepSubs <- function(x) {
# This function will call manipulation functions to edit strings to numeric or
# factor. Broadly, the purpose of this function is to convert the variable
# columns prepended with a letter from strings/factors to numeric.
# Load dplyr if not already loaded
require(dplyr)
# Pass dataframe to editVars
mutate_if(x, is.factor | is.character, funs(editVars)) %>%
mutate_if(is.factor | is.character, as.numeric)
}
tmp <- prepSubs(mmse.data)
prepSubs <- function(x) {
# This function will call manipulation functions to edit strings to numeric or
# factor. Broadly, the purpose of this function is to convert the variable
# columns prepended with a letter from strings/factors to numeric.
# Load dplyr if not already loaded
require(dplyr)
# Pass dataframe to editVars
mutate_if(x, is.factor, funs(editVars)) %>%
mutate_if(is.factor, as.numeric)
}
tmp <- prepSubs(mmse.data)
str(tmp_)
str(tmp)
library(openxlsx)
library(dplyr)
?"openxlsx"
participant.info <- read.xlsx("./Data Files/Participant Information.xlsx",
sheet = 1, detectDates = TRUE)
View(participant.info)
participant.info <- read.xlsx("./Data Files/Participant Information.xlsx",
sheet = 1, detectDates = TRUE)
View(participant.info)
set.seed(98657426)
subject.ids <- participant.info %>%
distinct(participant) %>%
select(participant)
View(subject.ids)
random.ids <- sample(1:1000, nrow(subject.ids), replace = FALSE)
subject.ids <- mutate(subject.ids, id = random.ids)
subject.ids <- mutate(subject.ids, id = random.ids) %>%
rename(subject = participant)
View(subject.ids)
participant.info <- rename(participant.info, subject = participant) %>%
left_join(subject.ids) %>%
mutate(age = dob - date)
View(participant.info)
participant.info <- rename(participant.info, subject = participant) %>%
left_join(subject.ids) %>%
mutate(age = (date - dob)/365)
participant.info <- read.xlsx("./Data Files/Participant Information.xlsx",
sheet = 1, detectDates = TRUE)
participant.info <- rename(participant.info, subject = participant) %>%
left_join(subject.ids) %>%
mutate(age = (date - dob)/365)
View(participant.info)
sheet.names <- getSheetNames("./Data Files/Participant Information.xlsx")
?write.csv
for (i in 2:length(sheet.names)){
tmp <- read.xlsx("./Original Data Files/Participant Information.xlsx",
sheet = i) %>%
rename(subject = participant) %>%
left_join(subject.ids) %>%
select(-subject)
write.csv(tmp,
paste("./Data Files/", sheet.names[i], ".csv", sep = ""),
sep = ",",
row.names = FALSE,
col.names = TRUE)
}
i
for (i in 2:length(sheet.names)){
tmp <- read.xlsx("./Original Data Files/Participant Information.xlsx",
sheet = i) %>%
rename(subject = participant) %>%
left_join(subject.ids) %>%
select(-subject)
write.csv(tmp,
paste("./Data Files/", sheet.names[i], ".csv", sep = ""),
sep = ",",
row.names = FALSE,
col.names = TRUE)
}
warnings()
for (i in 2:length(sheet.names)){
tmp <- read.xlsx("./Original Data Files/Participant Information.xlsx",
sheet = i) %>%
rename(subject = participant) %>%
left_join(subject.ids) %>%
select(-subject)
write.csv(tmp,
paste("./Data Files/", sheet.names[i], ".csv", sep = ""),
sep = ",",
row.names = FALSE,
col.names = TRUE)
}
View(tmp)
View(mmse.data)
View(trial.summary)
View(trial.summary)
trial.summary <- left_join(trial.summary, subject.ids)
View(trial.summary)
View(subject.ids)
3 %% 2
?return
deidentify <- function(x, ids){
# This function will replace original participant IDs with randomly generated
# ones for deidentification purposes
# Load dplyr if not already loaded
require(dplyr)
# Replace ids
x <- x %>%
left_join(ids) %>%
select(-subject) %>%
select(id, block, everything())
return(x)
}
for (i in 2:length(sheet.names)){
tmp <- read.xlsx("./Original Data Files/Participant Information.xlsx",
sheet = i) %>%
rename(subject = participant)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", sheet.names[i], ".csv", sep = ""),
sep = ",",
row.names = FALSE,
col.names = TRUE)
}
set.seed(98657426)
#### Load first data frame ####
# The participant information sheet is Page 1 of Participant Information.xlsx.
# We will use this page to get participant IDs from which to generate random
# IDs. Additionally, participation date and DOB will be converted to ages.
participant.info <- read.xlsx("./Original Data Files/Participant Information.xlsx",
sheet = 1, detectDates = TRUE)
#### Get participant IDs ####
subject.ids <- participant.info %>%
distinct(participant) %>%
select(participant)
random.ids <- sample(1:1000, nrow(subject.ids), replace = FALSE)
subject.ids <- mutate(subject.ids,
id = random.ids,
block = ifelse(participant %% 2 == 1, "Second", "First")) %>%
rename(subject = participant)
#### Deidentify participant info ####
participant.info <- rename(participant.info, subject = participant) %>%
left_join(subject.ids) %>%
mutate(age = (date - dob)/365) %>%
select(-subject, -date, -dob) %>%
select(id, block, everything())
#### Deidentify remaining participant information sheets ####
# This step will deidentify the rest of the participant information as well as
# write each sheet in the original .xlsx file to a CSV for future use.
sheet.names <- getSheetNames("./Original Data Files/Participant Information.xlsx")
for (i in 2:length(sheet.names)){
tmp <- read.xlsx("./Original Data Files/Participant Information.xlsx",
sheet = i) %>%
rename(subject = participant)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", sheet.names[i], ".csv", sep = ""),
sep = ",",
row.names = FALSE,
col.names = TRUE)
}
dfa.data <- read.csv("./Original Data Files/DFA.csv")
View(dfa.data)
editVars <- function(x) {
# This function drops the subject and trial identifies "S" and "tr".
gsub("[A-z]", "", x)
}
prepSubs <- function(x) {
# This function will call manipulation functions to edit strings to numeric or
# factor. Broadly, the purpose of this function is to convert the variable
# columns prepended with a letter from strings/factors to numeric.
# Load dplyr if not already loaded
require(dplyr)
# Pass dataframe to editVars
mutate_if(x, is.factor, funs(editVars)) %>%
mutate_if(is.factor, as.numeric)
}
str(dfa.data)
View(dfa.data)
dfa.data <- read.csv("./Original Data Files/DFA.csv") %>%
select(-X) %>%
mutate_if(is.factor, editVars)
View(dfa.data)
dfa.data <- read.csv("./Original Data Files/DFA.csv") %>%
select(-X)
dfa.data <- prepSubs(dfa.data)
View(dfa.data)
str(dfa.data)
dfa.data <- deidentify(dfa.data, subject.ids)
View(dfa.data)
dfa.data <- read.csv("./Original Data Files/DFA.csv") %>%
select(-X)
dfa.data <- prepSubs(dfa.data)
View(dfa.data)
View(subject.ids)
outcome.files <- list.files(path = "./Original Data Files")
outcome.files <- list.files(path = "./Original Data Files",
pattern = ".csv")
#### Load outcomes data and deidentify ####
outcome.files <- list.files(path = "./Original Data Files",
pattern = ".csv")
for (i in 1:length(outcome.files)){
tmp <- read.csv(paste("./Original Data Files/", outcome.files[i], sep = ""),
header = TRUE)
tmp <- prepSubs(tmp)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", outcome.files[i], sep = ""),
row.names = FALSE,
col.names = TRUE)
}
i
for (i in 1:length(outcome.files)){
tmp <- read.csv(paste("./Original Data Files/", outcome.files[i], sep = ""),
header = TRUE)
colnames(tmp) <- tolower(colnames(tmp))
tmp <- prepSubs(tmp)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", outcome.files[i], sep = ""),
row.names = FALSE,
col.names = TRUE)
}
i
for (i in 1:length(outcome.files)){
tmp <- read.csv(paste("./Original Data Files/", outcome.files[i], sep = ""),
header = TRUE)
colnames(tmp) <- tolower(colnames(tmp))
tmp <- prepSubs(tmp)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", outcome.files[i], sep = ""),
row.names = FALSE,
col.names = TRUE)
}
outcome.files <- list.files(path = "./Original Data Files",
pattern = ".csv")
for (i in 1:length(outcome.files)){
tmp <- read.csv(paste("./Original Data Files/", outcome.files[i], sep = ""),
header = TRUE)
colnames(tmp) <- tolower(colnames(tmp))
tmp <- prepSubs(tmp)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", outcome.files[i], sep = ""),
row.names = FALSE,
col.names = TRUE)
}
i
outcome.files[i[
outcome.files[i]
outcome.files <- list.files(path = "./Original Data Files",
pattern = ".csv")
for (i in 1:length(outcome.files)){
tmp <- read.csv(paste("./Original Data Files/", outcome.files[i], sep = ""),
header = TRUE)
colnames(tmp) <- tolower(colnames(tmp))
tmp <- prepSubs(tmp)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", outcome.files[i], sep = ""),
row.names = FALSE,
col.names = TRUE)
}
outcome.files[i]
outcome.files <- list.files(path = "./Original Data Files",
pattern = ".csv")
for (i in 1:length(outcome.files)){
tmp <- read.csv(paste("./Original Data Files/", outcome.files[i], sep = ""),
header = TRUE)
colnames(tmp) <- tolower(colnames(tmp))
tmp <- prepSubs(tmp)
tmp <- deidentify(tmp, subject.ids)
write.csv(tmp,
paste("./Data Files/", outcome.files[i], sep = ""),
row.names = FALSE,
col.names = TRUE)
}
write.csv(subject.ids,
"./Original Data Files/Subject IDs.csv",
row.names = FALSE)
subject.ids <- arrange(subject.ids,
desc(subject))
View(subject.ids)
subject.ids <- arrange(subject.ids,
subject)
View(subject.ids)
rm(list = ls("tmp", "subject.ids", "participant.info", "random.ids",
"sheet.names", "outcome.files", "i"))
rm(list = ls("tmp", "subject.ids", "participant.info", "random.ids",
"sheet.names", "outcome.files"))
rm(list = c("tmp", "subject.ids", "participant.info", "random.ids",
"sheet.names", "outcome.files", "i"))
source("./R Script files/Helper functions.R")
source("./R Script files/Deidentification.R")
tmp
outcome.files[i]
source("./R Script files/Deidentification.R")
require(tidyverse)
raw.data <- read.csv("./Data Files/Raw_Vision.csv")
head(raw.data)
source("./R Script files/Deidentification.R")
outcome.files[i]
source("./R Script files/Deidentification.R")
warnings()
raw.data <- read.csv("./Data Files/Raw_Vision.csv")
head(raw.data)
raw.data <- read.csv("./Data Files/Raw Vision.csv")
raw.data <- read.csv("./Data Files/Raw Data.csv")
head(raw.data)
ncol(raw.data)
raw.data.long <- raw.data %>%
select(id, block, trial, center, everything()) %>%
group_by(subject, trial) %>%
gather(xvals, yvals, -subject:-center)
raw.data.long <- raw.data %>%
select(id, block, trial, center, everything()) %>%
group_by(id, trial) %>%
gather(xvals, yvals, -id:-center)
View(raw.data.long)
raw.data.long <- raw.data %>%
select(id, block, trial, center, everything()) %>%
group_by(id, block, trial, center) %>%
gather(xvals, yvals, -id:-center)
View(raw.data.long)
raw.data.long <- raw.data %>%
select(-x) %>%
select(id, block, trial, center, everything()) %>%
group_by(id, block, trial, center) %>%
gather(xvals, yvals, -id:-center)
View(raw.data.long)
str(raw.data.long)
raw.data.long$xvals <- as.numeric(gsub("[A-z]", "", raw.data.long$xvals)
)
head(raw.data.long)
source("./R Script files/Helper functions.R")
source("./R Script files/Deidentification.R")
raw.data <- read.csv("./Data Files/Raw Data.csv")
# View data
head(raw.data)
ncol(raw.data)
# Reshape to long format
raw.data.long <- raw.data %>%
select(-x) %>%
select(id, block, trial, center, everything()) %>%
group_by(id, block, trial, center) %>%
gather(xvals, yvals, -id:-center)
#### Convert xvals ####
# Need to strip the prepended "x" from the values
raw.data.long$xvals <- as.numeric(gsub("[A-z]", "", raw.data.long$xvals))
head(raw.data.long)
#### Reorder data frame ####
# Right now, the data frame is organized by id, trial, point. This means
# that all of the 0 time point values come first for all participants, then 1,
# etc. This is impractical and unviewable. Dataframe will be resorted to haveall
# of the points for a single participant's trial list in succession.
raw.data.long <- arrange(raw.data.long, xvals)
head(raw.data.long)
raw.data.long <- group_by(id, block, trial, center) %>%
arrange(raw.data.long, xvals)
raw.data.long <- group_by(raw.data.long, id, block, trial, center) %>%
arrange(xvals)
View(raw.data.long)
source("./R Script files/Deidentification.R")
source("./R Script files/Trial Validation.R")
source("./R Script files/Trial Validation.R")
setwd(my.dir)
source("./R Script files/Trial Validation.R")
View(tmp)
setwd(my.dir)
source("./R Script files/Trial Validation.R")
View(trial.summary)
source("./R Script files/Trial Validation.R")
View(trial.summary)
dfa.data <- read.csv("./Data Files/DFA.csv", header = TRUE, sep = ",")
View(dfa.data)
str(dfa.data)
avp.data <- read.csv("./Data Files/AvP.csv", header = TRUE, sep = ",") %>%
(-x)
avp.data <- read.csv("./Data Files/AvP.csv", header = TRUE, sep = ",")
View(avp.data)
avp.data <- read.csv("./Data Files/AvP.csv", header = TRUE, sep = ",") %>%
select(-x)
source("./R Script files/Deidentification.R")
View(tmp)
tmp <- read.csv(paste("./Original Data Files/", outcome.files[i], sep = ""),
header = TRUE)
View(tmp)
source("./R Script files/Deidentification.R")
source("./R Script files/Deidentification.R")
participant.info <- read.csv("./Data Files/Participant Info.csv",
header = TRUE, sep = ",")
suspected.concussions <- read.csv("./Data Files/Suspected Concussion.csv",
header = TRUE, sep = ",")
diagnosed.concussions <- read.csv("./Data Files/Diagnosed Concussions.csv",
header = TRUE, sep = ",")
concussion.symptoms <- read.csv("./Data Files/Concussion Symptoms.csv",
header = TRUE, sep = ",")
participant.order <- read.csv("./Data Files/Order.csv",
header = TRUE, sep = ",")
source("./R Script files/Deidentification.R")
participant.info <- read.csv("./Data Files/Participant Info.csv",
header = TRUE, sep = ",")
suspected.concussions <- read.csv("./Data Files/Suspected Concussions.csv",
header = TRUE, sep = ",")
diagnosed.concussions <- read.csv("./Data Files/Diagnosed Concussions.csv",
header = TRUE, sep = ",")
concussion.symptoms <- read.csv("./Data Files/Concussion Symptoms.csv",
header = TRUE, sep = ",")
participant.order <- read.csv("./Data Files/Order.csv",
header = TRUE, sep = ",")
View(participant.info)
View(diagnosed.concussions)
participants <- participant.info %>%
select(id, block, gender, hand, height, weight, gamer, age) %>%
left_join(diagnosed.concussions) %>%
select(-age.first:-Notes) %>%
left_join(suspected.concussions) %>%
select(-age.first:-Notes) %>%
left_join(concussion.symptoms) %>%
left_join(participant.order)
View(participants)
View(suspected.concussions)
View(concussion.symptoms)
View(concussion.symptoms)
participants <- participant.info %>%
select(id, block, gender, hand, height, weight, gamer, age) %>%
left_join(diagnosed.concussions) %>%
select(-age.first:-Notes) %>%
left_join(suspected.concussions) %>%
select(-age.first:-Notes) %>%
left_join(concussion.symptoms) %>%
select(LOC, seizure, amnesia, sx.current) %>%
left_join(participant.order)
participants <- participant.info %>%
select(id, block, gender, hand, height, weight, gamer, age) %>%
left_join(diagnosed.concussions) %>%
select(-age.first:-Notes) %>%
left_join(suspected.concussions) %>%
select(-age.first:-Notes) %>%
left_join(concussion.symptoms) %>%
left_join(participant.order)
View(participants)
participants <- participant.info %>%
select(id, block, gender, hand, height, weight, gamer, age) %>%
left_join(diagnosed.concussions) %>%
select(-age.first:-Notes) %>%
left_join(suspected.concussions) %>%
select(-age.first:-Notes) %>%
left_join(concussion.symptoms) %>%
left_join(participant.order) %>%
select(id, block, order, gender, hand, height, weight, gamer, age,
diagnosed.concussion, diagnosed.number, suspected.concussion,
suspected.concussion, LOC, seizure, amnesia, sx.current)
participants <- participant.info %>%
select(id, block, gender, hand, height, weight, gamer, age) %>%
left_join(diagnosed.concussions) %>%
select(-age.first:-Notes) %>%
left_join(suspected.concussions) %>%
select(-age.first:-Notes) %>%
left_join(concussion.symptoms) %>%
left_join(participant.order) %>%
select(id, block, order, gender, hand, height, weight, gamer, age,
diagnosed.concussion, diagnosed.number, suspected.concussion,
suspected.number, LOC, seizure, amnesia, sx.current)
participants <- participant.info %>%
select(id, block, gender, hand, height, weight, gamer, age) %>%
left_join(diagnosed.concussions) %>%
select(-age.first:-Notes) %>%
left_join(suspected.concussions) %>%
select(-age.first:-Notes) %>%
left_join(concussion.symptoms) %>%
left_join(participant.order) %>%
select(id, block, order, gender, hand, height, weight, gamer, age,
diagnosed.number, suspected.number, LOC, seizure, amnesia, sx.current) %>%
mutate(concussion.number = diagnosed.number + suspected.number,
prior.concussion = ifelse(concussion.number != 0, "Yes", "No"))
