source("./R Script files/Deidentification.R")
source("./R Script files/Trial Validation.R")
View(trial.summary)
source("./R Script files/Deidentification.R")
source("./R Script files/Deidentification.R")
write.csv(trial.summary, "./Data Files/Trial Summary.csv", row.names = FALSE)
mmse.data <- read.csv("./Data Files/MMSE.csv", header = TRUE, sep = ",")
raw.complexity <- group_by(mmse.data, subject) %>%
gather(scale, value, -trial) %>%
summarise(complexity = sum(value)
)
View(mmse.data)
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -trial, -block) %>%
summarise(complexity = sum(value))
View(raw.complexity)
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -trial, -block) %>%
group_by(id) %>%
summarise(complexity = sum(value))
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
summarise(complexity = sum(value))
View(raw.complexity)
View(mmse.data)
dfa.data <- read.csv(paste(my_dir, "/Data Files/DFA.csv", sep = ""),
header = TRUE, sep = ",")
avp.data <- read.csv(paste(my_dir, "./Data Files/AvP.csv", sep = ""),
header = TRUE, sep = ",")
trial.summary <- read.csv(paste(my_dir, "./Data Files/Trial Summary.csv", sep = ""),
header = TRUE, sep = ",")
my_dir <- getwd()
mmse.data <- read.csv(paste(my_dir, "./Data Files/MMSE.csv", sep = ""),
header = TRUE, sep = ",")
mmse.detrended.data <- read.csv(paste(my_dir, "./Data Files/Detrended MMSE.csv", sep = ""),
header = TRUE, sep = ",")
dfa.data <- read.csv(paste(my_dir, "/Data Files/DFA.csv", sep = ""),
header = TRUE, sep = ",")
avp.data <- read.csv(paste(my_dir, "./Data Files/AvP.csv", sep = ""),
header = TRUE, sep = ",")
trial.summary <- read.csv(paste(my_dir, "./Data Files/Trial Summary.csv", sep = ""),
header = TRUE, sep = ",")
# Create dataframe with only complexity for MMSE and detrended MMSE
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
summarise(complexity = sum(value))
detrended.complexity <- group_by(mmse.detrended.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
summarise(detrended.complexity = sum(value))
```
```{r createJointFrame}
full.frame <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
left_join(participants)
source("./R Script files/Participant information.R")
full.frame <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
left_join(participants)
View(full.frame)
View(detrended.complexity)
rmarkdown::render(input = "./R Script files/Exploratory analysis.Rmd",
output_format = "pdf_document",
output_file = "./Plots/Exploratory Analysis.pdf")
#### Load helper functions ####
source("./R Script files/Helper functions.R")
#### Get minimal participant information ####
source("./R Script files/Participant information.R")
```
```{r descriptiveStatistics}
part.desc <- select(participants, height, weight, age, gender, hand, gamer,
diagnosed.number, suspected.number, concussion.number,
prior.concussion)
table1(part.desc,
height, weight, age, gender, hand, gamer,
diagnosed.number, suspected.number, concussion.number,
splitby = ~prior.concussion,
test = TRUE,
output_type = "markdown")
```
\newpage
\center
#Boxplots of outcomes by factor-level predictors
\newpage
\blandscape
```{r readData}
#### Read in outcomes data ####
mmse.data <- read.csv(paste(my_dir, "./Data Files/MMSE.csv", sep = ""),
header = TRUE, sep = ",")
mmse.detrended.data <- read.csv(paste(my_dir, "./Data Files/Detrended MMSE.csv", sep = ""),
header = TRUE, sep = ",")
dfa.data <- read.csv(paste(my_dir, "/Data Files/DFA.csv", sep = ""),
header = TRUE, sep = ",")
avp.data <- read.csv(paste(my_dir, "./Data Files/AvP.csv", sep = ""),
header = TRUE, sep = ",")
trial.summary <- read.csv(paste(my_dir, "./Data Files/Trial Summary.csv", sep = ""),
header = TRUE, sep = ",")
# Create dataframe with only complexity for MMSE and detrended MMSE
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
summarise(complexity = sum(value))
detrended.complexity <- group_by(mmse.detrended.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
summarise(detrended.complexity = sum(value))
```
```{r createJointFrame}
full.frame <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
left_join(participants)
```
```{r boxplots, results = "asis", fig.height = 10, fig.width = 16}
outcomes <- c("rmse.V", "raw.complexity",
"detrended.complexity", "avp04", "avp48",
"avp812", "alpha")
titles <- c("RMSE", "Complexity", "Detrended Complexity",
"Average 0-4 Hz Power",
"Average 4-8 Hz Power", "Average 8-12 Hz Power",
"DFA Alpha")
for (i in 1:length(outcomes)){
a <- my_boxplot(group = "block", y = outcomes[i], data = full.frame)
b <- my_boxplot(group = "prior.concussion", y = outcomes[i], data = full.frame)
c <- my_boxplot(group = "gender", y = outcomes[i], data = full.frame)
d <- my_boxplot(group = "gamer", y = outcomes[i], data = full.frame)
grid <- plot_grid(a, b, c, d,
labels = c("A", "B", "C", "D"),
ncol = 2)
title <- ggdraw() + draw_label(titles[i], fontface = "bold")
panel_plot <- plot_grid(title, grid, ncol = 1, rel_heights = c(0.1,1))
print(panel_plot)
cat("\\newpage")
}
View(full.frame)
rmarkdown::render(input = "./R Script files/Exploratory analysis.Rmd",
output_format = "pdf_document",
output_file = "./Plots/Exploratory Analysis.pdf")
View(individual.frame)
View(raw.complexity)
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
summarise(complexity = sum(value))
View(raw.complexity)
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
group_by(id, block, trial) %>%
summarise(complexity = sum(value))
View(raw.complexity)
detrended.complexity <- group_by(mmse.detrended.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
group_by(id, block, trial) %>%
summarise(detrended.complexity = sum(value))
raw.complexity <- mutate(raw.complexity, outcome = "MMSE") %>%
rename(value = complexity)
View(raw.complexity)
View(full.frame)
library(dplyr)
read.csv("./Data Files/Trial Summary.csv")
trial.summary <- read.csv("./Data Files/Trial Summary.csv")
View(trial.summary)
filter(trial.summary, valid.volts >0.2) %>% group_by(id) %>% summarise(count = n())
tmp <- filter(trial.summary, valid.volts >0.2) %>% group_by(id) %>% summarise(count = n())
View(tmp)
source("./R Script files/Trial Validation.R")
source("./R Script files/Trial Validation.R")
source("./R Script files/Trial Validation.R")
setwd("C:/Users/a01382606/Desktop/Force Tracking")
source("./R Script files/Trial Validation.R")
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
drop.low <- filter(x, valid.volts > 0.2) %>%
select(id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 5)
return(drop.low)
}
trial_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
bad_trials <- read.csv("Excluded Trials.csv", header = TRUE, sep = ",")
retained.ids <- participant_inclusion(x)
retained.trials <- left_join(x, retained.ids) %>%
anti_join(bad_trials)
}
tmp <- participant_inclusion(trial.summary)
anti_join(trial.summary, tmp)
anti_join(trial.summary, tmp) %>% group_by(id) %>% summarise(n = n())
trial_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
bad_trials <- read.csv("./Data Files/Excluded Trials.csv", header = TRUE, sep = ",")
retained.ids <- participant_inclusion(x)
retained.trials <- left_join(x, retained.ids) %>%
anti_join(bad_trials)
}
tmp <- trial_inclusion(trial.summary)
View(tmp)
bad_trials <- read.csv("./Data Files/Excluded Trials.csv", header = TRUE, sep = ",")
View(bad_trials)
retained.ids <- participant_inclusion(x)
retained.ids <- participant_inclusion(trial.summary)
View(retained.ids)
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
filter(x, valid.volts > 0.2) %>%
select(id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
select(count)
}
retained.ids <- participant_inclusion(trial.summary)
View(retained.ids)
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
filter(x, valid.volts > 0.2) %>%
select(id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
select(id)
}
View(retained.ids)
retained.ids <- participant_inclusion(trial.summary)
View(retained.ids)
retained.trials <- left_join(trial.summary, retained.ids)
retained.trials <- semi_join(trial.summary, retained.ids)
View(retained.trials)
tmp <- anti_join(retained.trials, bad_trials)
valid.trials <- trial_inclusion(trial.summary)
trial_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
bad.trials <- read.csv("./Data Files/Excluded Trials.csv", header = TRUE, sep = ",")
retained.ids <- participant_inclusion(x)
retained.trials <- semi_join(x, retained.ids) %>%
anti_join(bad.trials) %>%
select(id, trial)
return(retained.trials)
}
valid.trials <- trial_inclusion(trial.summary)
source("./R Script files/Participant information.R")
part.desc <- semi_join(participants, valid.trials) %>%
select(height, weight, age, gender, hand, gamer, LOC, amnesia,
diagnosed.number, suspected.number, concussion.number,
prior.concussion)
table1(part.desc,
height, weight, age, gender, hand, gamer, LOC, amnesia,
diagnosed.number, suspected.number, concussion.number,
splitby = ~prior.concussion,
test = TRUE,
output_type = "markdown")
mmse.data <- read.csv(paste(my_dir, "./Data Files/MMSE.csv", sep = ""),
header = TRUE, sep = ",")
mmse.detrended.data <- read.csv(paste(my_dir, "./Data Files/Detrended MMSE.csv", sep = ""),
header = TRUE, sep = ",")
dfa.data <- read.csv(paste(my_dir, "/Data Files/DFA.csv", sep = ""),
header = TRUE, sep = ",")
avp.data <- read.csv(paste(my_dir, "./Data Files/AvP.csv", sep = ""),
header = TRUE, sep = ",")
my_dir <- getwd()
mmse.data <- read.csv(paste(my_dir, "./Data Files/MMSE.csv", sep = ""),
header = TRUE, sep = ",")
mmse.detrended.data <- read.csv(paste(my_dir, "./Data Files/Detrended MMSE.csv", sep = ""),
header = TRUE, sep = ",")
dfa.data <- read.csv(paste(my_dir, "/Data Files/DFA.csv", sep = ""),
header = TRUE, sep = ",")
avp.data <- read.csv(paste(my_dir, "./Data Files/AvP.csv", sep = ""),
header = TRUE, sep = ",")
raw.complexity <- group_by(mmse.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
group_by(id, block, trial) %>%
summarise(complexity = sum(value))
detrended.complexity <- group_by(mmse.detrended.data, id) %>%
gather(scale, value, -id, -trial, -block) %>%
group_by(id, block, trial) %>%
summarise(detrended.complexity = sum(value))
full.frame <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
semi_join(participants)
View(full.frame)
full.frame <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
left_join(participants) %>%
semi_join(valid.trials)
View(full.frame)
View(valid.trials)
View(trial.summary)
trial.summary <- read.csv(paste(my_dir, "./Data Files/Trial Summary.csv", sep = ""),
header = TRUE, sep = ",")
bad.trials <- read.csv(paste(my_dir, "./Data Files/Excluded Trials.csv", sep = ""),
header = TRUE, sep = ",")
valid.trials <- trial_inclusion(trial.summary, bad.trials)
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
retained.ids <- participant_inclusion(allTrials)
retained.trials <- semi_join(allTrials, retained.ids) %>%
anti_join(badTrials) %>%
select(id, trial)
return(retained.trials)
}
trial.summary <- read.csv(paste(my_dir, "./Data Files/Trial Summary.csv", sep = ""),
header = TRUE, sep = ",")
bad.trials <- read.csv(paste(my_dir, "./Data Files/Excluded Trials.csv", sep = ""),
header = TRUE, sep = ",")
valid.trials <- trial_inclusion(trial.summary, bad.trials)
View(valid.trials)
View(valid.trials)
full.frame <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
left_join(participants) %>%
semi_join(valid.trials)
View(full.frame)
full.frame.valid <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
left_join(participants) %>%
semi_join(valid.trials) %>%
filter(valid.volts > 0.2) %>% group_by(id) %>% summarise(count = n())
View(full.frame.valid)
full.frame.valid <- left_join(dfa.data, avp.data) %>%
left_join(trial.summary) %>%
left_join(raw.complexity) %>%
left_join(detrended.complexity) %>%
left_join(participants) %>%
semi_join(valid.trials) %>%
filter(valid.volts > 0.2) %>% group_by(id) %>% summarise(count = n()) %>% filter(count >5)
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
select(x, id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
select(id)
}
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
drop.low <- filter(allTrials,
valid.volts > 0.2)
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
filter(valid.volts > 0.2) %>%
select(id, trial)
return(retained.trials)
}
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
drop.low <- filter(allTrials,
valid.volts > 0.2)
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
filter(valid.volts > 0.2) %>%
select(id, trial)
return(retained.trials)
}
tmp <- trial_inclusion(trial.summary, bad.trials)
View(tmp)
drop.low <- filter(trial.summary, valid.volts > 0.2)
trial.summary <- read.csv(paste(my_dir, "./Data Files/Trial Summary.csv", sep = ""),
header = TRUE, sep = ",")
trial.summary <- read.csv(paste(my_dir, "./Data Files/Trial Summary.csv", sep = ""),
header = TRUE, sep = ",")
drop.low <- filter(trial.summary, valid.volts > 0.2)
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
select(x, id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
select(id)
}
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
select(id, trial)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(bad.trials) %>%
select(id, trial)
View(drop.low)
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
select(x, id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
select(id)
}
retained.ids <- participant_inclusion(drop.low)
anti_join(trial.summary, retained.ids)
anti_join(trial.summary, retained.ids) %>% group_by(id) %>% summarise(count = n())
anti_join(trial.summary, drop.low) %>% group_by(id) %>% summarise(count = n())
anti_join(trial.summary, drop.low) %>% group_by(id) %>% summarise(count = n()) %>% View()
anti_join(drop.low, retained.ids) %>% group_by(id) %>% summarise(count = n())
View(bad.trials)
retained.trials <- semi_join(drop.low, retained.ids)
retained.trials <- trial_inclusion(trial.summary, bad.trials)
anti_join(trial.summary, retained.trials)
anti_join(trial.summary, retained.trials) %>% group_by(id) %>% summarise(count = n()) %>% View()
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
select(x, id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count => 5) %>%
select(id)
}
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
drop.low <- filter(allTrials,
valid.volts > 0.2)
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
select(id, trial)
return(retained.trials)
}
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
select(x, id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 4) %>%
select(id)
}
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
drop.low <- filter(allTrials,
valid.volts > 0.2)
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
select(id, trial)
return(retained.trials)
}
tmp <- trial_inclusion(trial.summary, bad.trials)
anti_join(trial.summary, tmp) %>% group_by(id) %>% summarise(count = n()) %>% View()
participant_inclusion <- function(x){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
select(x, id, trial) %>%
group_by(id) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
select(id)
}
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
drop.low <- filter(allTrials,
valid.volts > 0.2)
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
select(id, trial)
return(retained.trials)
}
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
drop.low <- filter(allTrials,
valid.volts > 0.2)
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
select(id, trial)
retained.ids <- participant_inclusion(retained.trials)
retained.trials <- semi_join(retained.trails, retained.ids)
return(retained.trials)
}
tmp <- trial_inclusion(trial.summary, bad.trials)
trial_inclusion <- function(allTrials, badTrials){
# This function is not meant for broad purpose use. It is specific to this project
require(dplyr)
drop.low <- filter(allTrials,
valid.volts > 0.2)
retained.ids <- participant_inclusion(drop.low)
retained.trials <- semi_join(drop.low, retained.ids) %>%
anti_join(badTrials) %>%
select(id, trial)
retained.ids <- participant_inclusion(retained.trials)
retained.trials <- semi_join(retained.trials, retained.ids)
return(retained.trials)
}
tmp <- trial_inclusion(trial.summary, bad.trials)
upgroup(tmp) %>%
distinct(id) %>%
select(id) %>%
View()
ungroup(tmp) %>% distinct(id) %>% select(id) %>% View()
View(tmp)
